#include<Arduino.h>
#include <Wire.h>
#include "SparkFun_SCD30_Arduino_Library.h"
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
SCD30 airSensor;
float euler_number = 2.71828182;
float euler_number_negative = 0.36787944117;
float CO2 = 0;
float Temperature = 0;
float Humedad = 0;
float co2_outdoor = 400;
float co2_peack = 0;
float co2_diference = 0;
float Decay63_percentage = 0;
float ventilation_rate = 0;
float Probabilidad = 0;
float quanta_inhaled_per_person = 0;
float average_quanta_concentration = 0;
float Breathing_rate = 0.318; //el numero debe de ser cambiado si se sabe lo que se hace, el valor es valido para alumnos de 16-21 
float Mask_eficiency = 0.5;//si se conoce la eficiencia de la masacara y se establece que todos tengan la misma, se pude cambiar
float Net_emission_Rate = 0;
float Total_order_loss_rate = 0;
float volume = 6;//se debe de cambiar dependiendo del salon, debe de ser m3
float Quanta_Exalation_rate_of_posible_infected = 25;
bool Sensor_ausente = false;
void No_Sensor_ (){
Serial.println("Air sensor not detected. Please check wiring. Freezing...");
delay(2000);
display.stopscroll();
const unsigned char NO_SENSOR_LOGO [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xc3, 0xdf, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xef, 0xff, 0xdf, 0xfc, 0x7f, 0xfc, 
	0x0f, 0xe3, 0xdf, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xf7, 0xf0, 0xef, 0xff, 0xdf, 0xfe, 0x7f, 0xfc, 
	0x0f, 0xe3, 0xdf, 0xfe, 0x00, 0x7f, 0xfe, 0xff, 0xf7, 0xf1, 0xef, 0xff, 0xdf, 0xfe, 0x7f, 0xfe, 
	0x0f, 0xe3, 0xdf, 0xfe, 0x00, 0x7f, 0xfe, 0xff, 0xf3, 0xf1, 0xef, 0xff, 0xdf, 0xfe, 0x7f, 0xfe, 
	0x07, 0xe7, 0x9f, 0xfe, 0x00, 0x7f, 0xfc, 0xff, 0xf3, 0xf1, 0xe7, 0xff, 0xdf, 0xfe, 0x3f, 0xfe, 
	0x07, 0xe7, 0x9f, 0x1e, 0x00, 0x3c, 0x3c, 0xf8, 0x03, 0xf1, 0xe7, 0xc7, 0x9f, 0x1e, 0x3c, 0x3c, 
	0x0f, 0xe7, 0x9f, 0x1e, 0x00, 0x7c, 0x3c, 0xf8, 0x07, 0xf9, 0xe7, 0xc7, 0x9f, 0x1e, 0x7c, 0x7c, 
	0x0f, 0xe7, 0x9f, 0x1e, 0x00, 0x7c, 0x21, 0xf8, 0x07, 0xfb, 0xcf, 0x84, 0x1f, 0x1e, 0x7c, 0x7c, 
	0x0f, 0xe7, 0xbe, 0x1e, 0x00, 0x7c, 0x01, 0xf0, 0x07, 0xfb, 0xcf, 0x80, 0x1f, 0x1f, 0x7c, 0x7c, 
	0x0f, 0xe7, 0xbe, 0x1e, 0x00, 0x78, 0x01, 0xf0, 0x07, 0xfb, 0xcf, 0x80, 0x3f, 0x3e, 0x7c, 0x7c, 
	0x1f, 0xf7, 0xbe, 0x3e, 0x00, 0x78, 0x01, 0xf0, 0x07, 0xfb, 0xce, 0x00, 0x3e, 0x3e, 0xfc, 0x7c, 
	0x1f, 0xff, 0x3e, 0x3e, 0x00, 0x7f, 0xf9, 0xff, 0x87, 0xfb, 0xdf, 0xff, 0xbe, 0x3e, 0xff, 0xfc, 
	0x1f, 0xff, 0x3e, 0x3e, 0x00, 0xff, 0xf9, 0xff, 0x87, 0xfb, 0xdf, 0xff, 0x3e, 0x3e, 0xff, 0xf8, 
	0x1f, 0xff, 0x3e, 0x3e, 0x00, 0xff, 0xf9, 0xff, 0x87, 0xfb, 0x9f, 0xff, 0x3e, 0x3e, 0xff, 0xf8, 
	0x1f, 0xff, 0x3e, 0x3e, 0x00, 0xff, 0xfb, 0xff, 0x87, 0xfb, 0x9f, 0xff, 0x3e, 0x3e, 0xff, 0xf8, 
	0x1f, 0xff, 0x7e, 0x3c, 0x00, 0xff, 0xfb, 0xff, 0x8f, 0xff, 0x9f, 0xff, 0x3e, 0x7c, 0xff, 0xf8, 
	0x1f, 0xff, 0x7c, 0x3c, 0x00, 0x00, 0xfb, 0xff, 0x8f, 0xff, 0x80, 0x1f, 0x7c, 0x7c, 0xff, 0xf0, 
	0x1f, 0xff, 0x7c, 0x3c, 0x00, 0x00, 0xfb, 0xe0, 0x0f, 0xff, 0x80, 0x1e, 0x7c, 0x7c, 0xf9, 0xe0, 
	0x3e, 0xff, 0x7c, 0x7c, 0x00, 0x00, 0xf3, 0xe0, 0x0f, 0xff, 0x80, 0x3e, 0x7c, 0x7c, 0xf1, 0xe0, 
	0x3e, 0xff, 0x7c, 0x7c, 0x00, 0x71, 0xf3, 0xe0, 0x1f, 0xff, 0x8e, 0x3e, 0x7c, 0x7d, 0xf1, 0xe0, 
	0x3e, 0xfe, 0x7c, 0x7c, 0x01, 0xf1, 0xf7, 0xe0, 0x1f, 0xbf, 0xbe, 0x3e, 0x7c, 0x7d, 0xf1, 0xe0, 
	0x3e, 0xfe, 0x78, 0x7c, 0x01, 0xf1, 0xf7, 0xc0, 0x1f, 0x3f, 0x3e, 0x3e, 0x78, 0x79, 0xf1, 0xf0, 
	0x3e, 0x7c, 0x7f, 0xfc, 0x01, 0xff, 0xf7, 0xff, 0xdf, 0x3f, 0x3f, 0xfe, 0x7f, 0xf9, 0xf1, 0xf0, 
	0x3e, 0x7c, 0x7f, 0xf8, 0x01, 0xff, 0xe7, 0xff, 0xdf, 0x3f, 0x3f, 0xfc, 0x7f, 0xf9, 0xf1, 0xf0, 
	0x3e, 0x7c, 0x7f, 0xf8, 0x01, 0xff, 0xe7, 0xff, 0xdf, 0x3f, 0x3f, 0xfc, 0x7f, 0xfb, 0xe0, 0xf0, 
	0x7e, 0x7c, 0x7f, 0xf8, 0x03, 0xff, 0xe3, 0xff, 0xdf, 0x3f, 0x7f, 0xfc, 0x7f, 0xfb, 0xe0, 0xf0, 
	0x7c, 0x7c, 0x7f, 0xf8, 0x03, 0xff, 0xc3, 0xff, 0xdf, 0x3f, 0x7f, 0xfc, 0x7f, 0xfb, 0xe0, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
display.clearDisplay();
display.setTextSize(2);
display.setTextColor(WHITE);
display.setCursor(0, 0);
display.drawBitmap(0,0,NO_SENSOR_LOGO,128,32,1);
display.display();
delay(1000);
const unsigned char ALERT_LOGO [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0x3c, 0x20, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x00, 0x20, 0x03, 0x80, 0x03, 
	0xf0, 0x1c, 0x20, 0x01, 0xff, 0x80, 0x00, 0x00, 0x08, 0x0f, 0x10, 0x00, 0x20, 0x01, 0x80, 0x03, 
	0xf0, 0x1c, 0x20, 0x01, 0xff, 0x80, 0x01, 0x00, 0x08, 0x0e, 0x10, 0x00, 0x20, 0x01, 0x80, 0x01, 
	0xf0, 0x1c, 0x20, 0x01, 0xff, 0x80, 0x01, 0x00, 0x0c, 0x0e, 0x10, 0x00, 0x20, 0x01, 0x80, 0x01, 
	0xf8, 0x18, 0x60, 0x01, 0xff, 0x80, 0x03, 0x00, 0x0c, 0x0e, 0x18, 0x00, 0x20, 0x01, 0xc0, 0x01, 
	0xf8, 0x18, 0x60, 0xe1, 0xff, 0xc3, 0xc3, 0x07, 0xfc, 0x0e, 0x18, 0x38, 0x60, 0xe1, 0xc3, 0xc3, 
	0xf0, 0x18, 0x60, 0xe1, 0xff, 0x83, 0xc3, 0x07, 0xf8, 0x06, 0x18, 0x38, 0x60, 0xe1, 0x83, 0x83, 
	0xf0, 0x18, 0x60, 0xe1, 0xff, 0x83, 0xde, 0x07, 0xf8, 0x04, 0x30, 0x7b, 0xe0, 0xe1, 0x83, 0x83, 
	0xf0, 0x18, 0x41, 0xe1, 0xff, 0x83, 0xfe, 0x0f, 0xf8, 0x04, 0x30, 0x7f, 0xe0, 0xe0, 0x83, 0x83, 
	0xf0, 0x18, 0x41, 0xe1, 0xff, 0x87, 0xfe, 0x0f, 0xf8, 0x04, 0x30, 0x7f, 0xc0, 0xc1, 0x83, 0x83, 
	0xe0, 0x08, 0x41, 0xc1, 0xff, 0x87, 0xfe, 0x0f, 0xf8, 0x04, 0x31, 0xff, 0xc1, 0xc1, 0x03, 0x83, 
	0xe0, 0x00, 0xc1, 0xc1, 0xff, 0x80, 0x06, 0x00, 0x78, 0x04, 0x20, 0x00, 0x41, 0xc1, 0x00, 0x03, 
	0xe0, 0x00, 0xc1, 0xc1, 0xff, 0x00, 0x06, 0x00, 0x78, 0x04, 0x20, 0x00, 0xc1, 0xc1, 0x00, 0x07, 
	0xe0, 0x00, 0xc1, 0xc1, 0xff, 0x00, 0x06, 0x00, 0x78, 0x04, 0x60, 0x00, 0xc1, 0xc1, 0x00, 0x07, 
	0xe0, 0x00, 0xc1, 0xc1, 0xff, 0x00, 0x04, 0x00, 0x78, 0x04, 0x60, 0x00, 0xc1, 0xc1, 0x00, 0x07, 
	0xe0, 0x00, 0x81, 0xc3, 0xff, 0x00, 0x04, 0x00, 0x70, 0x00, 0x60, 0x00, 0xc1, 0x83, 0x00, 0x07, 
	0xe0, 0x00, 0x83, 0xc3, 0xff, 0xff, 0x04, 0x00, 0x70, 0x00, 0x7f, 0xe0, 0x83, 0x83, 0x00, 0x0f, 
	0xe0, 0x00, 0x83, 0xc3, 0xff, 0xff, 0x04, 0x1f, 0xf0, 0x00, 0x7f, 0xe1, 0x83, 0x83, 0x06, 0x1f, 
	0xc1, 0x00, 0x83, 0x83, 0xff, 0xff, 0x0c, 0x1f, 0xf0, 0x00, 0x7f, 0xc1, 0x83, 0x83, 0x0e, 0x1f, 
	0xc1, 0x00, 0x83, 0x83, 0xff, 0x8e, 0x0c, 0x1f, 0xe0, 0x00, 0x71, 0xc1, 0x83, 0x82, 0x0e, 0x1f, 
	0xc1, 0x01, 0x83, 0x83, 0xfe, 0x0e, 0x08, 0x1f, 0xe0, 0x40, 0x41, 0xc1, 0x83, 0x82, 0x0e, 0x1f, 
	0xc1, 0x01, 0x87, 0x83, 0xfe, 0x0e, 0x08, 0x3f, 0xe0, 0xc0, 0xc1, 0xc1, 0x87, 0x86, 0x0e, 0x0f, 
	0xc1, 0x83, 0x80, 0x03, 0xfe, 0x00, 0x08, 0x00, 0x20, 0xc0, 0xc0, 0x01, 0x80, 0x06, 0x0e, 0x0f, 
	0xc1, 0x83, 0x80, 0x07, 0xfe, 0x00, 0x18, 0x00, 0x20, 0xc0, 0xc0, 0x03, 0x80, 0x06, 0x0e, 0x0f, 
	0xc1, 0x83, 0x80, 0x07, 0xfe, 0x00, 0x18, 0x00, 0x20, 0xc0, 0xc0, 0x03, 0x80, 0x04, 0x1f, 0x0f, 
	0x81, 0x83, 0x80, 0x07, 0xfc, 0x00, 0x1c, 0x00, 0x20, 0xc0, 0x80, 0x03, 0x80, 0x04, 0x1f, 0x0f, 
	0x83, 0x83, 0x80, 0x07, 0xfc, 0x00, 0x3c, 0x00, 0x20, 0xc0, 0x80, 0x03, 0x80, 0x04, 0x1f, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
display.clearDisplay();
display.setTextSize(2);
display.setTextColor(WHITE);
display.setCursor(0, 0);
display.drawBitmap(0,0,ALERT_LOGO,128,32,1);
display.display(); 
delay(1000);
display.startscrollleft(0x00, 0x0F);
const unsigned char NO_VIDA [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc3, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x80, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x80, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x03, 0x80, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 0x80, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x80, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00
};
display.clearDisplay();
display.setTextSize(2);
display.setTextColor(WHITE);
display.setCursor(0, 0);
display.drawBitmap(0,0,NO_VIDA,128,32,1);
display.display(); 
delay(10000);
Sensor_ausente = true;
 if(Sensor_ausente == true)esp_restart();
}
const unsigned char BOREAS [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0x7f, 0xff, 0x87, 0xff, 0xfe, 0x3f, 0xff, 0xe0, 0x7e, 0x00, 0xff, 0xff, 0xe0, 
	0x03, 0xff, 0xff, 0x7f, 0xff, 0xc7, 0xff, 0xfe, 0x3f, 0xff, 0xe0, 0x7e, 0x00, 0xff, 0xff, 0xe0, 
	0x03, 0xff, 0xfe, 0x3f, 0xff, 0xc7, 0xff, 0xfe, 0x3f, 0xff, 0xe0, 0x7e, 0x00, 0xff, 0xff, 0xe0, 
	0x03, 0xff, 0xfe, 0x3f, 0xff, 0xc7, 0xff, 0xfe, 0x3f, 0xff, 0xe0, 0x7f, 0x00, 0xff, 0xff, 0xc0, 
	0x01, 0xfc, 0x3e, 0x3f, 0x87, 0xc3, 0xf0, 0xfe, 0x3f, 0x80, 0x00, 0x7f, 0x00, 0xfe, 0x1f, 0xc0, 
	0x01, 0xf8, 0x3e, 0x3f, 0x87, 0xc3, 0xf0, 0xfe, 0x3f, 0x80, 0x00, 0x3f, 0x00, 0x7e, 0x0f, 0xc0, 
	0x03, 0xf8, 0x7c, 0x7f, 0x0f, 0xe7, 0xf0, 0xfe, 0x3f, 0x80, 0x00, 0x7f, 0x00, 0xfe, 0x0e, 0x00, 
	0x03, 0xf8, 0xf8, 0x7f, 0x0f, 0xe7, 0xf0, 0xfe, 0x7f, 0x80, 0x00, 0xff, 0x00, 0xfe, 0x00, 0x00, 
	0x03, 0xf9, 0xf0, 0x7f, 0x0f, 0xe7, 0xf0, 0xfc, 0x7f, 0x00, 0x00, 0xff, 0x01, 0xfc, 0x00, 0x00, 
	0x07, 0xf3, 0xe0, 0x7f, 0x0f, 0xcf, 0xe0, 0xfc, 0x7f, 0x00, 0x01, 0xff, 0x01, 0xfc, 0x00, 0x00, 
	0x07, 0xf7, 0xfc, 0xfe, 0x0f, 0xcf, 0xff, 0xfc, 0x7f, 0xfe, 0x01, 0xff, 0x81, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xfc, 0xfe, 0x1f, 0xcf, 0xff, 0xfc, 0x7f, 0xfe, 0x03, 0xff, 0x81, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xfc, 0xfe, 0x1f, 0xcf, 0xff, 0xf8, 0xff, 0xfe, 0x07, 0xff, 0x81, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xfc, 0xfe, 0x1f, 0x9f, 0xff, 0xf8, 0xff, 0xfc, 0x07, 0xff, 0x83, 0xff, 0xff, 0x00, 
	0x0f, 0xfd, 0xfd, 0xfe, 0x1f, 0x9f, 0xff, 0xf8, 0xff, 0xfc, 0x0f, 0xff, 0x80, 0x00, 0x7f, 0x00, 
	0x0f, 0xf9, 0xfd, 0xfc, 0x3f, 0x9f, 0xc7, 0xe0, 0xfe, 0x00, 0x0f, 0xdf, 0xc0, 0x00, 0x7f, 0x00, 
	0x0f, 0xf1, 0xf9, 0xfc, 0x3f, 0x9f, 0xc7, 0xe1, 0xfc, 0x00, 0x1f, 0xcf, 0xc0, 0x00, 0xfe, 0x00, 
	0x0f, 0xe1, 0xf9, 0xfc, 0x3f, 0x9f, 0xc7, 0xe1, 0xfc, 0x00, 0x1f, 0x8f, 0xc0, 0xe0, 0xfe, 0x00, 
	0x1f, 0xc3, 0xf9, 0xfc, 0x3f, 0x3f, 0x87, 0xf1, 0xfc, 0x00, 0x3f, 0x8f, 0xc7, 0xe0, 0xfe, 0x00, 
	0x1f, 0xc3, 0xfb, 0xf8, 0x3f, 0x3f, 0x83, 0xf1, 0xfc, 0x00, 0x3f, 0x0f, 0xc7, 0xf0, 0xfe, 0x00, 
	0x1f, 0xff, 0xf9, 0xff, 0xff, 0x3f, 0x83, 0xf1, 0xff, 0xff, 0x7f, 0xff, 0xc7, 0xff, 0xfc, 0x00, 
	0x1f, 0xff, 0xf1, 0xff, 0xff, 0x3f, 0x83, 0xf1, 0xff, 0xff, 0x7f, 0xff, 0xe7, 0xff, 0xfc, 0x00, 
	0x3f, 0xff, 0xf1, 0xff, 0xff, 0x7f, 0x03, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xf8, 0x00, 
	0x3f, 0xff, 0xf1, 0xff, 0xfe, 0x7f, 0x03, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
Wire.begin(23,18);
Serial.begin(115200);
delay(100);
 if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
  Serial.println("SSD1306 allocation failed");
  for(;;);
}
display.clearDisplay();
display.setTextSize(2);
display.setTextColor(WHITE);
display.setCursor(0, 0);
display.drawBitmap(0,0,BOREAS,128,32,1);
display.display(); 
delay(1000);
if(airSensor.begin() == false){
No_Sensor_();
}
}
void loop() {

if (airSensor.dataAvailable()){
if(CO2 > co2_peack)co2_peack = CO2;
co2_diference = co2_peack - co2_outdoor;
Decay63_percentage = co2_outdoor + (euler_number_negative * co2_diference);
ventilation_rate = 1;
Total_order_loss_rate = ventilation_rate + 0.62 + 0.3;
Net_emission_Rate = Quanta_Exalation_rate_of_posible_infected *(1-Mask_eficiency*1)*1;
average_quanta_concentration = (Net_emission_Rate/Total_order_loss_rate/volume)*(1-(1-Total_order_loss_rate/1))*(1-pow(euler_number,Total_order_loss_rate));
quanta_inhaled_per_person = average_quanta_concentration * Breathing_rate * 1 * (1 - (Mask_eficiency * 1));
Probabilidad = (1-(pow(euler_number,(quanta_inhaled_per_person))));
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);
display.setCursor(0, 0);
display.print("Probabilidad:");
display.print(Probabilidad);
display.display(); 
}}
